---
# vim: set ft=yaml:
- name: Common setup for both workers and controller
  hosts: control, worker, broker
  become: true
  gather_facts: false
  tasks:
    # Python 2 support
    - name: If missing, install Python
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python3 python-is-python3)
      changed_when: False

- name: Common setup for both workers and controller
  hosts: control, worker, broker
  become: true
  gather_facts: true
  tasks:
    - name: Create /etc/rancher/k3s
      tags: [always]
      shell:
        cmd: mkdir -p /etc/rancher/k3s

    - name: Copy registries.yaml
      tags: [always]
      ansible.builtin.template:
        src: registries.yaml.j2
        dest: /etc/rancher/k3s/registries.yaml
      register: result

    # - name: Install docker.io
    #   ansible.builtin.package:
    #     name: docker.io
    #     state: present

    - name: Restart Docker service
      ansible.builtin.service:
        name: docker
        state: restarted

- name: Install K3S and post-install config
  hosts: control
  become: true
  gather_facts: false
  tasks:
    - name: Install k3s on controller
      environment:
        # INSTALL_K3S_EXEC: --disable=traefik --disable=local-storage
        # If the private_ip variable is set, set the --node-ip flag, otherwise skip
        INSTALL_K3S_EXEC: --docker --disable=traefik --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1% {{ '--node-ip=' ~ (private_ip | default('')) ~ ' --flannel-iface=enp10s0f1' if (private_ip | default('')) else '' }}
        # INSTALL_K3S_EXEC: --disable=traefik --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1%
        # INSTALL_K3S_EXEC: --disable=traefik --disable=local-storage --container-runtime-endpoint unix:///run/containerd/containerd.sock
        INSTALL_K3S_VERSION: v1.24.17+k3s1
        # K3S_TOKEN: K10787911fcda12ddecf7e216979de14959f7d521e09045647400b6daf21d16bd8b::server:dd400bd9-93dd-4402-8512-4cec59e5cf24
      shell:
        cmd: "curl -sfL https://get.k3s.io | sh -s -"

    - name: Get node token
      tags: [always]
      ansible.builtin.shell:
        cmd: sudo cat /var/lib/rancher/k3s/server/token
      register: NODE_TOKEN

    - name: "Create Dummy Host for saving *global* variable"
      tags: [always]
      add_host:
        name: "CONTROLLER_DETAILS"
        token: "{{ NODE_TOKEN.stdout }}"
        controller_ip: "{{ ansible_default_ipv4.address }}"

    - ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ kubeconfig_path }}"
        flat: true

    # - name: Remove /etc/cni
    #   ansible.builtin.file:
    #     path: /etc/cni
    #     state: absent

    # - name: Link cni folders
    #   ansible.builtin.file:
    #     src: /var/lib/rancher/k3s/data/current/bin
    #     dest: /usr/lib/cni
    #     owner: root
    #     group: root
    #     state: link

    # - name: Link cni folders
    #   ansible.builtin.file:
    #     src: /var/lib/rancher/k3s/agent/etc/cni
    #     dest: /etc/cni
    #     owner: root
    #     group: root
    #     state: link

    # - name: Restart k3s
    #   ansible.builtin.service:
    #     name: k3s
    #     state: restarted

    # - name: Restart containerd
    #   ansible.builtin.service:
    #     name: containerd
    #     state: restarted

- name: Setup Workers
  hosts: worker
  become: true
  gather_facts: false
  strategy: free
  tasks:
    - name: Install k3s on workers
      environment:
        K3S_URL: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443
        K3S_TOKEN: "{{ hostvars['CONTROLLER_DETAILS']['token'] }}"
        # INSTALL_K3S_EXEC: --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1%
        INSTALL_K3S_EXEC: --docker --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1% --node-label node.kubernetes.io/worker=true {{ '--node-ip=' ~ (private_ip | default('')) ~ ' --flannel-iface=enp10s0f1' if (private_ip | default('')) else '' }}
        # INSTALL_K3S_EXEC: --container-runtime-endpoint unix:///run/containerd/containerd.sock
        INSTALL_K3S_VERSION: v1.24.17+k3s1
      shell:
        cmd: curl -sfL https://get.k3s.io | sh -s -

- name: Setup brokers
  hosts: broker
  become: true
  gather_facts: false
  strategy: free
  tasks:
    - name: Install k3s on workers
      environment:
        K3S_URL: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443
        K3S_TOKEN: "{{ hostvars['CONTROLLER_DETAILS']['token'] }}"
        # INSTALL_K3S_EXEC: --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1%
        INSTALL_K3S_EXEC: --docker --kubelet-arg=eviction-hard=nodefs.available<1%,imagefs.available<1%,nodefs.inodesFree<1% --node-label node.kubernetes.io/broker=true {{ '--node-ip=' ~ (private_ip | default('')) ~ ' --flannel-iface=enp10s0f1' if (private_ip | default('')) else '' }}
        # INSTALL_K3S_EXEC: --container-runtime-endpoint unix:///run/containerd/containerd.sock
        INSTALL_K3S_VERSION: v1.24.17+k3s1
      shell:
        cmd: curl -sfL https://get.k3s.io | sh -s -

- name: Post-install localhost configuration
  hosts: localhost
  gather_facts: false
  connection: local
  tags:
    - kubeconfig
    - always
  tasks:
    - name: Patch kubeconfig
      ansible.builtin.lineinfile:
        path: "{{ kubeconfig_path }}"
        regexp: 127.0.0.1:6443
        line: "    server: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443"

    - name: Patch kubeconfig
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: default
        replace: exp

    - name: Set correct chmod on kubeconfig
      ansible.builtin.file:
        path: "{{ kubeconfig_path }}"
        mode: "0600"

    - name: Wait for all k3s nodes to be ready
      shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s
      register: nodes_ready
    - debug: var=nodes_ready.stdout_lines

- name: Post-install localhost configuration
  hosts: localhost
  gather_facts: false
  connection: local
  tags:
    - kubeconfig
    - always
  tasks:
    - name: Patch kubeconfig
      ansible.builtin.lineinfile:
        path: "{{ kubeconfig_path }}"
        regexp: 127.0.0.1:6443
        line: "    server: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443"

    - name: Patch kubeconfig
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: default
        replace: exp

    - name: Set correct chmod on kubeconfig
      ansible.builtin.file:
        path: "{{ kubeconfig_path }}"
        mode: "0600"

    # - name: Label worker nodes # https://github.com/k3s-io/k3s/issues/1289
    #   shell: kubectl get nodes -oname -l 'node-role.kubernetes.io/control-plane notin (true)' | xargs -n1 -I@ kubectl label @ node-role.kubernetes.io/worker=true

    - name: Wait for all k3s nodes to be ready
      shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s
      register: nodes_ready
    - debug: var=nodes_ready.stdout_lines
